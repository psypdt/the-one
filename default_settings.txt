#
# These are the default settings using Epidemic Routing 
# Edited by Philipp Tiso
#

## Scenario settings
Scenario.name = default_epidemic_scenario
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 43200

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 10

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 1000


# Wifi interface for the groups
wifiInterface.type = SimpleBroadcastInterface
wifiInterface.transmitSpeed = 7.5M
wifiInterface.transmitRange = 100

# Define the number of different node groups
Scenario.nrofHostGroups = 4

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
Group.router = [\
	EpidemicRouter;\
	EpidemicRouter;\
	EpidemicRouter;\
	ProphetRouter;\
	ProphetRouter;\
	ProphetRouter;\
	]
Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = wifiInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300


## HOSPITALS IN HELSINKI

# Helsinki Hospital
Group1.groupID = HH
Group1.nrofHosts = 1
Group1.movementModel = StationaryMovement
# Location for one of the hospitals on Helsinki (movement in x| movement in y, large y -> down)
Group1.nodeLocation = 2120, 1490 

# Asva Hospital
Group2.groupID = AH
Group2.nrofHosts = 1
Group2.movementModel = StationaryMovement
Group2.nodeLocation = 1900, 1030

# Eiran Hospital
Group3.groupID = EH
Group3.nrofHosts = 1
Group3.movementModel = StationaryMovement
Group3.nodeLocation = 2300, 2340

# Vehicles
Group4.groupID = V
Group4.nrofHosts = 20
Group4.movementModel = ShortestPathMapBasedMovement
# Can only drive on the road
okMaps = 1
Group4.speed = 2.7, 13.9


## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 25,35
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# Indexes of nodes which can create these messages, all the moving cars but not the hospitals. NOTE: Upper bound is exclusive
Events1.hosts = 3,23
# The hospitals are the destinations
Events1.tohosts = 0,3
# Message ID prefix
Events1.prefix = M


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = [1;2;0;4;6;5]
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 2
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = [\
	reports/epidemic/run0;\
	reports/epidemic/run1;\
	reports/epidemic/run2;\
	reports/prophet/run0;\
	reports/prophet/run1;\
	reports/prophet/run2\
	]

# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = ContactTimesReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
